{"version":3,"sources":["helper/Contexts.jsx","components/MainMenu.jsx","helper/QuestionBank.jsx","components/Quiz.jsx","components/End.jsx","App.js","reportWebVitals.js","index.js"],"names":["QuizContext","createContext","MainMenu","useContext","setQuizState","quizState","Container","Grid","container","spacing","justify","item","lg","Box","p","boxShadow","style","marginTop","Paper","backgroundColor","height","Typography","variant","align","paddingTop","className","margin","src","width","borderRadius","alt","textAlign","Button","onClick","color","maxWidth","maxHeight","minWidth","minHeight","Questions","quesNum","prompt","A","B","C","D","ans","Quiz","useState","currQuestion","setCurrQuestion","id","document","getElementById","border","textTransform","length","End","display","marginLeft","marginRight","App","score","setScore","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ff88d87a.chunk.js","sourcesContent":["import {createContext} from \"react\";\r\n\r\nexport const QuizContext = createContext();","import React, { useContext } from \"react\";\r\nimport { QuizContext } from \"../helper/Contexts\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  Grid,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport '../App.css'\r\n\r\nconst MainMenu = () => {\r\n  const { quizState, setQuizState } = useContext(QuizContext);\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={4} justify=\"center\">\r\n        <Grid item lg={6}>\r\n          <Box p={3} boxShadow={3} style={{ marginTop: \"60px\" }}>\r\n            <Paper style={{ backgroundColor: \"#96BAFF\", height: \"30vw\" }}>\r\n              <Typography\r\n                variant=\"h4\"\r\n                align=\"center\"\r\n                style={{ paddingTop: \"20px\" }}\r\n              >\r\n                TECHNICAL COMMUNICATION\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                align=\"center\"\r\n                style={{ marginTop: \"-10px\" }}\r\n              >\r\n                <h4>Welcome to the Quiz</h4>\r\n              </Typography>\r\n              <div className=\"flip-card\" style={{margin: 'auto'}}>\r\n                <div className=\"flip-card-inner\">\r\n                  <div className=\"flip-card-front\">\r\n                    <img\r\n                      src=\"https://avatars.githubusercontent.com/u/69422566?v=4\"\r\n                      style={{\r\n                        width: \"10vw\",\r\n                        borderRadius: \"100%\"\r\n                      }}\r\n                      alt=\"my_image\"\r\n                    ></img>\r\n                  </div>\r\n                  <div className=\"flip-card-back\">\r\n                    <h1>Utkarsh Mall</h1>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <Button\r\n                  onClick={() => {\r\n                    setQuizState(\"quiz\");\r\n                  }}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{\r\n                    maxWidth: \"200px\",\r\n                    maxHeight: \"60px\",\r\n                    minWidth: \"200px\",\r\n                    minHeight: \"60px\",\r\n                    marginTop: \"13vw\"\r\n                  }}\r\n                >\r\n                  Start Quiz\r\n                </Button>\r\n              </div>\r\n            </Paper>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MainMenu;\r\n","export const Questions = [\r\n    {\r\n        quesNum: \"1\",\r\n        prompt: \"Which type of communication establishes and builds lasting relationships between people?\",\r\n        A: \"One way\",\r\n        B: \"Two way\",\r\n        C: \"Three way\",\r\n        D: \"None of these\",\r\n        ans: \"B\"\r\n    },\r\n    {\r\n        quesNum: \"2\",\r\n        prompt: \"Which among these is the principle of Effective communication?\",\r\n        A: \"Clarity of objective\",\r\n        B: \"Selection of media\",\r\n        C: \"Feedback\",\r\n        D: \"All of these\",\r\n        ans: \"D\"\r\n    },\r\n    {\r\n        quesNum: \"3\",\r\n        prompt: \"Communication is the task of imparting _________.\",\r\n        A: \"Training\",\r\n        B: \"Information\",\r\n        C: \"Knowledge\",\r\n        D: \"Message\",\r\n        ans: \"B\"\r\n    },\r\n    {\r\n        quesNum: \"4\",\r\n        prompt: \"Which one among these is not the part of 7 C's of communication?\",\r\n        A: \"Courtesy\",\r\n        B: \"Clarity\",\r\n        C: \"Competency\",\r\n        D: \"Concrete\",\r\n        ans: \"C\"\r\n    },\r\n    {\r\n        quesNum: \"5\",\r\n        prompt: \"Technical writing demands ______ use of language.\",\r\n        A: \"Figurative\",\r\n        B: \"Poetic\",\r\n        C: \"Factual\",\r\n        D: \"Dramatic\",\r\n        ans: \"C\"\r\n    },\r\n    {\r\n        quesNum: \"6\",\r\n        prompt: \"Which one is avoided in technical writing?\",\r\n        A: \"Fillers\",\r\n        B: \"Grammar\",\r\n        C: \"Punctuation\",\r\n        D: \"Facts\",\r\n        ans: \"A\"\r\n    },\r\n    {\r\n        quesNum: \"7\",\r\n        prompt: \"Which one among these is(are) basic requirement(s) of paragraph construction?\",\r\n        A: \"Coherence\",\r\n        B: \"Unity\",\r\n        C: \"Emphasis\",\r\n        D: \"All of these\",\r\n        ans: \"D\"\r\n    },\r\n    {\r\n        quesNum: \"8\",\r\n        prompt: \"What is the meaning of the term 'Brevity'.\",\r\n        A: \"Concise\",\r\n        B: \"Clear\",\r\n        C: \"Knowledge\",\r\n        D: \"Extensive\",\r\n        ans: \"A\"\r\n    },\r\n    {\r\n        quesNum: \"9\",\r\n        prompt: \"Which one of these is not a characteristic feature of language?\",\r\n        A: \"Artificial\",\r\n        B: \"Restricted\",\r\n        C: \"Concrete\",\r\n        D: \"Abstract\",\r\n        ans: \"C\"\r\n    },\r\n    {\r\n        quesNum: \"10\",\r\n        prompt: \"Which is the main barrier to listening?\",\r\n        A: \"Physical barrier\",\r\n        B: \"Linguistic barrier\",\r\n        C: \"Cultural barrier\",\r\n        D: \"Physiological barrier\",\r\n        ans: \"A\"\r\n    },\r\n]","import React, { useState, useContext } from \"react\";\r\nimport { QuizContext } from \"../helper/Contexts\";\r\nimport { Questions } from \"../helper/QuestionBank\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  Grid,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\nconst Quiz = () => {\r\n  const { setQuizState } = useContext(QuizContext);\r\n  const [currQuestion, setCurrQuestion] = useState(0);\r\n  const nextQuestion = () => {\r\n    setCurrQuestion(currQuestion + 1);\r\n    document.getElementById(\"a\").style.backgroundColor = \"#ebebeb\";\r\n    document.getElementById(\"b\").style.backgroundColor = \"#ebebeb\";\r\n    document.getElementById(\"c\").style.backgroundColor = \"#ebebeb\";\r\n    document.getElementById(\"d\").style.backgroundColor = \"#ebebeb\";\r\n    \r\n  };\r\n  const finshQuiz = () => {\r\n    setQuizState(\"end\");\r\n  };\r\n  const prevQuestion = () => {\r\n    if (Questions[currQuestion].quesNum !== \"1\") {\r\n      setCurrQuestion(currQuestion - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={6} justify=\"center\">\r\n        <Grid item lg={9}>\r\n          <Box p={3} boxShadow={3}>\r\n            <Paper style={{ backgroundColor: \"#96BAFF\", height: \"85vh\" }}>\r\n              <Typography variant=\"h4\" align=\"center\" style={{paddingTop: '20px'}}>\r\n                Question No. {Questions[currQuestion].quesNum}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" align=\"center\">\r\n                <h3>{Questions[currQuestion].prompt}</h3>\r\n              </Typography>\r\n              <Grid container justify=\"center\">\r\n                <Button\r\n                  id=\"a\"\r\n                  onClick={() => {\r\n                    if (\"A\" === Questions[currQuestion].ans) {\r\n                      document.getElementById(\"a\").style.backgroundColor =\r\n                        \"green\";\r\n                    } else\r\n                      document.getElementById(\"a\").style.backgroundColor =\r\n                        \"red\";\r\n                  }}\r\n                  variant=\"contained\"\r\n                  style={{\r\n                    width: \"80%\",\r\n                    border: \"solid blue\",\r\n                    textTransform: 'none'\r\n                  }}\r\n                >\r\n                  <h3>a) {Questions[currQuestion].A}</h3>\r\n                </Button>\r\n                <Button\r\n                  id=\"b\"\r\n                  onClick={() => {\r\n                    if (\"B\" === Questions[currQuestion].ans) {\r\n                      document.getElementById(\"b\").style.backgroundColor =\r\n                        \"green\";\r\n                    } else\r\n                      document.getElementById(\"b\").style.backgroundColor =\r\n                        \"red\";\r\n                  }}\r\n                  variant=\"contained\"\r\n                  style={{\r\n                    width: \"80%\",\r\n                    border: \"solid orange\",\r\n                    textTransform: 'none'\r\n                  }}\r\n                >\r\n                  <h3>b) {Questions[currQuestion].B}</h3>\r\n                </Button>\r\n                <Button\r\n                  id=\"c\"\r\n                  onClick={() => {\r\n                    if (\"C\" === Questions[currQuestion].ans) {\r\n                      document.getElementById(\"c\").style.backgroundColor =\r\n                        \"green\";\r\n                    } else\r\n                      document.getElementById(\"c\").style.backgroundColor =\r\n                        \"red\";\r\n                  }}\r\n                  variant=\"contained\"\r\n                  style={{\r\n                    width: \"80%\",\r\n                    border: \"solid purple\",\r\n                    textTransform: 'none'\r\n                  }}\r\n                >\r\n                  <h3>c) {Questions[currQuestion].C}</h3>\r\n                </Button>\r\n                <Button\r\n                  id=\"d\"\r\n                  onClick={() => {\r\n                    if (\"D\" === Questions[currQuestion].ans) {\r\n                      document.getElementById(\"d\").style.backgroundColor =\r\n                        \"green\";\r\n                    } else\r\n                      document.getElementById(\"d\").style.backgroundColor =\r\n                        \"red\";\r\n                  }}\r\n                  variant=\"contained\"\r\n                  style={{\r\n                    width: \"80%\",\r\n                    border: \"solid seaGreen\",\r\n                    textTransform: 'none'\r\n                  }}\r\n                >\r\n                  <h3>d) {Questions[currQuestion].D}</h3>\r\n                </Button>\r\n              </Grid>\r\n            </Paper>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n      {currQuestion === Questions.length - 1 ? (\r\n        <Button onClick={finshQuiz}>Finish Quiz</Button>\r\n      ) : (\r\n        <Button onClick={nextQuestion}>Next</Button>\r\n      )}\r\n      <Button onClick={prevQuestion}>PREV</Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import React from 'react';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Paper,\r\n    Grid,\r\n    Container,\r\n  } from \"@material-ui/core\";\r\n\r\nconst End = () => {\r\n    return (\r\n      <Container>\r\n      <Grid container spacing={4} justify=\"center\">\r\n        <Grid item lg={6}>\r\n          <Box p={3} boxShadow={3} style={{marginTop: '60px'}}>\r\n            <Paper style={{ backgroundColor: \"#96BAFF\", height: \"30vw\" }}>\r\n              <Typography variant=\"h4\" align=\"center\" style={{paddingTop: '20px'}}>\r\n                TECHNICAL COMMUNICATION\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" align=\"center\" style={{paddingTop: '20px'}}>\r\n                Thanks for attending this Quiz\r\n              </Typography>\r\n              <img\r\n                src=\"https://avatars.githubusercontent.com/u/69422566?v=4\"\r\n                style={{\r\n                  width: \"10vw\",\r\n                  borderRadius: \"100%\",\r\n                  display: \"block\",\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\",\r\n                  border: \"solid\",\r\n                  marginTop: \"30px\"\r\n                }}\r\n                alt=\"my_image\"\r\n              ></img>\r\n            </Paper>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n    )\r\n}\r\n\r\nexport default End;\r\n","import React, { useState, useContext } from \"react\";\nimport MainMenu from \"./components/MainMenu\";\nimport Quiz from \"./components/Quiz\";\nimport End from \"./components/End\";\nimport { QuizContext } from \"./helper/Contexts\";\nimport './App.css';\n\nfunction App() {\n  const [quizState, setQuizState] = useState(\"menu\");\n  const [score, setScore] = useState(0);\n  return (\n    <div id=\"container\">\n      <div id=\"container-inside\">\n        <div id=\"circle-small\"></div>\n        <div id=\"circle-medium\"></div>\n        <div id=\"circle-large\"></div>\n        <div id=\"circle-xlarge\"></div>\n        <div id=\"circle-xxlarge\"></div>\n        <QuizContext.Provider\n          value={{ quizState, setQuizState, score, setScore }}\n        >\n          {quizState === \"menu\" && <MainMenu />}\n          {quizState === \"quiz\" && <Quiz />}\n          {quizState === \"end\" && <End />}\n        </QuizContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}